module psi_cache {
  extern module messages;
  readonly CProxy_PsiCache psi_cache_proxy;

  nodegroup PsiCache {
    entry PsiCache();
    entry [exclusive] void receivePsi(PsiMessage*);
    entry [exclusive] void computeFs(PsiMessage*);
    entry void reportFTime();
    entry void setVCoulb(std::vector<double>, double);
    entry void setQIndex(int qindex);
    entry void reportInfo();
  };
  
  group DiagBridge{
    entry DiagBridge();
    entry void prepareData(int qindex, int size);
    entry void receiveDataSimple(DiagMessage* msg);
    entry [sync] int receiveHeapSimple(DiagBridge &inData);
  };



};
